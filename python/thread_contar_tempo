
 
import threading
 
 
nTempo=0
saida=[]
 
class TimerContinuo():
   
 
    def __init__(self, seconds, target):
        self._should_continue = False
        self.is_running = False
        self.seconds = seconds
        self.target = target
        self.thread = None
 
    def _handle_target(self):
        self.is_running = True
        self.target()
        self.is_running = False
        self._start_timer()
 
    def _start_timer(self):
        if self._should_continue:
            self.thread = threading.Timer(self.seconds, self._handle_target)
            self.thread.start()
 
    def start(self):
        if not self._should_continue and not self.is_running:
            self._should_continue = True
            self._start_timer()
        else:
            print("Timer está em execução. Por favor espere se você está reinicando.")
 
    def cancel(self):
        if self.thread is not None:
            self._should_continue = False
            self.thread.cancel()
        else:
            print("Timer nunca inicializou ou falhou na inicialização.")
 
 
def tick():  
    global nTempo
    nTempo = nTempo +1
    print (nTempo)
	
def main(args):
    global nTempo
	nTempo=0
	
	tmr = TimerContinuo(1.0, tick)
    tmr.start()
	#tmr.cancel()
	return 0